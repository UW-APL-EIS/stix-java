/**
 * Copyright Â© 2014, University of Washington
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the University of Washington nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL UNIVERSITY OF WASHINGTON BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package edu.uw.apl.stix.jaxb;

import java.io.File;
import java.util.Collection;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.io.FileUtils;

/**
 * @author Stuart Maclean.
 *
 * Test driver for simply counting the number of Java source files
 * generated by the xjc compiler.  We have an expected count.
 *
 * The xjc compiler runs against an 'uber' xsd file which was itself
 * generated via the following command:
 *
 * $ cd stix-java/jaxb/src/main/resources/1.1.1

 * $ xsdwalker -u 1.1.1 cybox_v2.1/ maec_v4.1/ *.xsd extensions/ \
     -e extensions/test_mechanism/oval_5.10_test_mechanism.xsd \
	 -e extensions/vulnerability/

*/
 
public class EnumerationTest extends junit.framework.TestCase {

	public void testGeneratedJavaSourcesCount() {
		File dir = new File( "target/generated-sources/xjc" );
		if( !dir.isDirectory() )
			fail( "Missing generated-sources directory.  Likely mvn issue" );
		Collection<File> fs = FileUtils.listFiles
			( dir, new String[] { "java" }, true );

		/*
		  With all the stix, cybox, maec classes less the forceably
		  excluded ones which cause xjc to barf, we expect this many
		  Java source files.  A reference for this is

		  $ find target/generated-sources/xjc -type f -name *.java | wc
		*/
		int expected = 1465;
		int actual = fs.size();
		assertEquals( expected, actual );
	}
}

// eof
